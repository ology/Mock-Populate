#!/usr/bin/perl
#
# Time-Ranger - Generate a range of HH:MM:SS random times.
# -- gene+mock@ology.net
#
use strict;
use warnings;

use Time::Local;

# Do we want output in unix time or stamp?
my $stamp = defined $ARGV[0] ? shift : 1;
# Get start and end times.
my $start = shift || die "Usage: perl $0 HH:MM:SS [HH:MM:SS]\n";
my $end   = shift || '';
# Set the desired number of data-points.
my $n     = shift || 9;

# Split the :-separated times.
my @start = split ':', $start;
my @end   = $end ? split(':', $end) : now();
warn "S->E: @start -> @end\n";

# Compute the number of seconds between start and end.
my $start_time = timegm(@start[2, 1, 0], (localtime(time))[3, 4, 5]);
my $end_time   = timegm(@end[2, 1, 0], (localtime(time))[3, 4, 5]);
my $range = $end_time - $start_time;
warn "R: $end_time (@end) - $start_time (@start) = $range\n";

# Declare the number of seconds.
my $offset = 0;

for(0 .. $n) {
    # Get a random number of seconds in the range.
    $offset = int(rand $range);
    # Print the start time plus the offest seconds.
    if ($stamp) {
        print scalar localtime($start_time + $offset), "\n";
    }
    else {
        print $start_time + $offset, "\n";
    }
}

sub now { # Return hour, minute, second.
    return (localtime(time))[2, 1, 0];
}

